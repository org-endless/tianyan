endless:
  project:
    home: ${user.dir}
  server:
    port: 60001
  tomcat:
    connection-timeout: 20000 # 设置连接超时时间，单位为毫秒
    max-threads: 200 # 设置最大线程数
    min-spare-threads: 10 # 设置最小闲置线程数
    accept-count: 100 # 设置最大请求队列数
    max-http-header-size: 8192 # 设置最大 HTTP 请求头大小，单位为字节
    uri-encoding: UTF-8 # 设置 URI 编码格式
  http:
    multipart:
      max-file-size: 5MB # 限制单个文件的最大上传大小
      max-request-size: 10MB # 限制整个请求的最大上传大小
  servlet:
    multipart:
      enabled: true # 启用文件上传功能
      location: ${endless.project.home}/tmp/uploads # 上传文件存储的临时目录
      resolve-lazily: true # 延迟解析 multipart 请求，减少内存占用
      max-file-size: 10MB # 限制单个文件的最大上传大小
      max-request-size: 20MB # 限制整个请求的最大上传大小
  redis:
    host: 101.89.127.199 # Redis 服务器的主机名或 IP 地址
    port: 6379 # Redis 服务器的端口，默认一般是 6379
    database: 11 # 使用的 Redis 数据库索引，默认通常是 0
    password: tansun@123 # Redis 服务器的密码，如果启用了认证则需要
    timeout: 10000 # 连接超时时间，单位为毫秒（10秒）
    command-timeout: 5000 # Redis 命令的最大等待时间，单位为毫秒，避免网络延迟造成长时间等待
    ssl: false # 是否启用 SSL 加密连接，如果 Redis 服务器启用了 SSL 则设置为 true
    cluster-mode: false # 是否启用集群模式，如果使用 Redis Cluster 则设置为 true
    lettuce:
      pool:
        min-idle: 0 # 连接池中最小空闲连接数
        max-idle: 8 # 连接池中最大空闲连接数
        max-active: 8 # 连接池中最大活动连接数（并发连接数）
        max-wait: -1 # 从连接池获取连接的最大等待时间，-1 表示没有限制
    socket-options:
      keep-alive: true # 启用保持连接，保持连接活跃以避免频繁创建新连接
      tcp-no-delay: true # 禁用 Nagle 算法，提升响应速度
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource # 指定 Druid 数据源类型
    driver-class-name: com.mysql.cj.jdbc.Driver # 设置数据库驱动类
    url: jdbc:mysql://101.89.127.204:3306/mtp_tmp_ningxia?allowMultiQueries=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: atpningxia # 数据库用户名
    password: -b+X-GM0U! # 数据库密码
  druid:
    initial-size: 1 # 初始化连接数
    min-idle: 1 # 最小空闲连接数
    max-active: 20 # 最大活动连接数
    max-wait: 60000 # 获取连接的最大等待时间，单位为毫秒
    validation-query: SELECT 1 # 连接验证查询
    test-on-borrow: false # 在获取连接时检查有效性
    test-on-return: false # 归还连接时进行检测
    test-while-idle: true # 在空闲时检查连接有效性
    time-between-eviction-runs-millis: 60000 # 运行空闲连接回收线程的时间间隔，单位为毫秒
    min-evictable-idle-time-millis: 300000 # 连接最小空闲时间，超过该时间将被回收，单位为毫秒
    max-evictable-idle-time-millis: 900000 # 连接最小空闲时间，超过该时间将被回收，单位为毫秒
    filters: stat,log4j2 # Druid 监控过滤器配置，开启统计和 log4j 记录
    stat-view-servlet:
      enabled: true # 是否启用 Druid 的监控页面
    web-stat-filter:
      enabled: true # 是否启用 Druid 的 Web 统计过滤器
    filter:
      stat:
        enabled: true # 启用统计过滤器
        log-slow-sql: true # 启用慢SQL记录
        slow-sql-millis: 1000 # 记录执行时间超过1000毫秒的SQL
        merge-sql: true # 合并相似的SQL执行
      wall:
        config:
          multi-statement-allow: true # 允许多条语句执行
  logging:
    config: file:config/log4j2-dev.xml
  minio:
    endpoint: http://101.89.127.198:9001 # MinIO 服务的访问地址，包含主机名/IP和端口号
    accessKey: autoTestPlatform # MinIO 服务的访问密钥 ID，用于身份验证
    secretKey: tansun@123 # MinIO 服务的访问密钥（从配置中读取），用于身份验证
    bucket: atp-ningxia # 默认存储桶名称（从配置中读取），用于存储数据
    # OkHttp连接池配置，用于控制与 MinIO 服务的连接管理
    connect-pool:
      max-idle: 20 # 最大空闲连接数，设置较大值可以减少频繁的连接创建和关闭
      keep-alive: 10 # 空闲连接保活时间，单位为分钟，超过该时间未使用的连接将被关闭
      timeout: 30 # 连接超时时间，单位为秒，超过该时间未能建立连接则会超时

  #数据源密码加解密
  aes-key: IjGBGSoiruZq9y2A
  des-key: mFTBDnaK/Qc=
  rsa-publicKey: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCuyweJKvjD5fKaJ+Q3pNDnvjPAXDthC6ty1vEkjwWhXhxnck9cvQMCoWcgQ3bzd6OJBP+ed3uRWkP4jKnB0KI2ijwjclodtpOLFi1PMu4KUK3Rm9U2vl1qLB7EFY9PeFn+kX5Mvw7F7sa9WqaWGfbs5D3o/mw+Bc/pAU1+xECCVQIDAQAB
  rsa-privateKey: MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAK7LB4kq+MPl8pon5Dek0Oe+M8BcO2ELq3LW8SSPBaFeHGdyT1y9AwKhZyBDdvN3o4kE/553e5FaQ/iMqcHQojaKPCNyWh22k4sWLU8y7gpQrdGb1Ta+XWosHsQVj094Wf6Rfky/DsXuxr1appYZ9uzkPej+bD4Fz+kBTX7EQIJVAgMBAAECgYAp3+jvwxQytkF/DeR+MiV8B1SVlmMBVk7eJcFCjWL/bDDo1XlO0ddJR4qRr6ftHvHWLxTgDWbUhSf4gRZgIM/jVHcUq7eUO5im/ACENgZSqVY5AnGl9tC0tzOyzjPKdfG+Df2ewBueTN4kw6JozrBco0iEQ1XPSdbY7gfb+nFIwQJBAOJfKXK6qM2ZOrHp7bcPVUVRNXI6vKt8SLOdXxhfT2EIFqiTO1vPttxMwJiJRN7Q3pTR2xbIOqWsEj6aK2Oqi/UCQQDFq6rZIV6JVVH8ry/48EPPauNCOMLedJQKclg7V2Y08XXoe7lNnp34pmR2iXqYhIf4HxfL3yiIXvL2YAncPYDhAkARdQE/RcHKySxLmByq51XOGKskef8ewmDg6RvyRzdZ5kPJEEGdnPEfIBQiL0POYxEnLN/Wa+6J5DEr/rul3fsZAkBJikpvqYiAU2vDNHIGjWzM+BlAg9mL5ZdGI7BLs4Jk5AhXy9/uzro6zbzGlPM1Vuk3GGpEAOwVgC2oF6bTd1ZBAkEA4Ey+Yz50g3iX5UGUDb4h4HZio/2zvXPzi+j2I1g2nNbZsjeOHH7XzKU8KfVrYtAGgdCYVmjFSFImBY2a/IbDwA==
