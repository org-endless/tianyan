worker_processes auto; # 根据 CPU 核心数自动设置 worker 数量
user root; # 运行 Nginx 的用户（建议使用非 root 用户，如 www-data）

events {
    worker_connections 8192; # 增加 worker 可处理的最大连接数（适用于高并发）
    multi_accept on; # 允许 worker 进程尽可能多地接受连接
    use epoll; # 使用高效的 epoll 事件驱动（仅 Linux）
}

http {
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 基础优化
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 20480m; # 允许较大的请求体
    underscores_in_headers on;

    # 限制 API 速率，防止 DDoS
    map $request_uri $limit_key {
        default "";
        "~*^/api" $binary_remote_addr;
    }
    limit_req_zone $limit_key zone=api_limit:10m rate=30r/s;

    # **防止 Nginx 将响应缓存到临时文件**
    proxy_buffering off;

    server {
        listen 443 ssl;
        server_name jyci.szcaee.cn;
        ssl_certificate     /etc/nginx/ssl/gycdp.crt;
        ssl_certificate_key /etc/nginx/ssl/gycdp.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        location ~* \.(png|jpg|jpeg)$ {
            add_header Vary Accept;
            if ($http_accept ~* "webp") {
                rewrite (.*)\.(png|jpg|jpeg)$ $1.webp break;
            }
        }
        # API 代理
        location ^~ / {
            proxy_pass http://gycdp-web:10000;
            client_max_body_size 20m;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # **优化代理的缓冲设置**
            proxy_buffer_size 256k;
            proxy_buffers 16 256k;
            proxy_busy_buffers_size 512k;
            proxy_temp_file_write_size 512k;
            proxy_max_temp_file_size 0; # **防止写入临时文件**

            proxy_send_timeout 1800;
            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;

            access_log /var/log/nginx/api_access.log main;

            # 限制 API 速率，防止恶意请求
            limit_req zone=api_limit burst=20 nodelay;
        }

        # **开启 Gzip 压缩**
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1024;
    }
}
